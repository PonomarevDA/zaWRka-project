<?xml version="1.0"?>
<launch>
  <!-- Аргумент, которым мы можем задать начальное положение робота в мире -->
  <!-- Параметры (-x, -y и т.д.) заданы как опции для узла spawn_model -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="native_odom" default="false" />

  <arg name="initial_pose" default="-x $(arg x) -y $(arg y) -z 0.5 -R 0 -P 0 -Y 1.57" />

  <arg name="tmode" default="false" />

  <!-- Аргумент, который содержит имя файла -->
  <arg name="urdf_file" default="$(find wr8_description)/urdf/model.urdf.xacro" />
  
  <!-- Настраиваем параметр `robot_description`, который будет нашим описанием робота -->
  <!-- Прогоняем через узел xacro, который произведет обработку файла, остальной функционал увидим позже -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg urdf_file)'" />
  
  <!-- Создаем робота узлом spawn_model -->
  <node name="spawn_base_model" pkg="gazebo_ros" type="spawn_model"
        args="$(arg initial_pose) -unpause -urdf -param robot_description -model my_robot" />

  <!-- Опубликуем TF статические преобразования на основе описания `robot_description` -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <rosparam command="load" file="$(find wr8_description)/config/controllers.yaml" />
  <node name="ackermann_controller_spawner" pkg="controller_manager" type="spawner"
    args="ackermann_joint_state_controller
          ackermann_drive_controller"/>

  <param name="ackermann_drive_controller/enable_odom_tf" value="$(arg native_odom)" />

  <arg name="gz_gui" default="false" />
  <arg name="rviz_gui" default="false" />
  <!-- Запускаем Gazebo, мир пустой - стандартный -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <env name="GAZEBO_MODEL_PATH" value="$(find wr8_description)/worlds" />

    <arg name="respawn_gazebo" value="true" />
    <!-- <arg name="world_name" value="$(find wr8_description)/worlds/empty_bullet.world"/> -->
    <arg unless="$(arg tmode)" name="world_name" value="$(find wr8_description)/worlds/RFMaze.v2.world"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gz_gui)"/>
  </include>

  <!-- Просто запустим rviz, после настройки добавим запуск конфигурации -->
  <node if="$(arg rviz_gui)" name="rviz" pkg="rviz" type="rviz" args="-d $(find wr8_description)/rviz/model_view.rviz" />
  
  <node if="$(arg tmode)" name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/ackermann_drive_controller/cmd_vel"/>
  </node>

  <node unless="$(arg native_odom)" 
        pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    <param name="base_frame" value="base_footprint" />
    <param name="fixed_frame" value="odom" />
    <param name="max_iterations" value="10" />
    <param name="use_odom" value="true" />
    <remap from="odom" to="ackermann_drive_controller/odom" />
  </node>

  <!-- Опубликуем TF динамические преобразования на основе описания `robot_description` -->
<!--   
  <node if="$(arg rviz_gui)" pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" >
    <param name="use_gui" value="true" />
  </node>
 -->
</launch>
